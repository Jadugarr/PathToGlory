//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity attackCooldownEntity { get { return GetGroup(GameMatcher.AttackCooldown).GetSingleEntity(); } }
    public AttackCooldownComponent attackCooldown { get { return attackCooldownEntity.attackCooldown; } }
    public bool hasAttackCooldown { get { return attackCooldownEntity != null; } }

    public GameEntity SetAttackCooldown(float newCooldown) {
        if(hasAttackCooldown) {
            throw new Entitas.EntitasException("Could not set AttackCooldown!\n" + this + " already has an entity with AttackCooldownComponent!",
                "You should check if the context already has a attackCooldownEntity before setting it or use context.ReplaceAttackCooldown().");
        }
        var entity = CreateEntity();
        entity.AddAttackCooldown(newCooldown);
        return entity;
    }

    public void ReplaceAttackCooldown(float newCooldown) {
        var entity = attackCooldownEntity;
        if(entity == null) {
            entity = SetAttackCooldown(newCooldown);
        } else {
            entity.ReplaceAttackCooldown(newCooldown);
        }
    }

    public void RemoveAttackCooldown() {
        DestroyEntity(attackCooldownEntity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AttackCooldownComponent attackCooldown { get { return (AttackCooldownComponent)GetComponent(GameComponentsLookup.AttackCooldown); } }
    public bool hasAttackCooldown { get { return HasComponent(GameComponentsLookup.AttackCooldown); } }

    public void AddAttackCooldown(float newCooldown) {
        var index = GameComponentsLookup.AttackCooldown;
        var component = CreateComponent<AttackCooldownComponent>(index);
        component.Cooldown = newCooldown;
        AddComponent(index, component);
    }

    public void ReplaceAttackCooldown(float newCooldown) {
        var index = GameComponentsLookup.AttackCooldown;
        var component = CreateComponent<AttackCooldownComponent>(index);
        component.Cooldown = newCooldown;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackCooldown() {
        RemoveComponent(GameComponentsLookup.AttackCooldown);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.MatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAttackCooldown;

    public static Entitas.IMatcher<GameEntity> AttackCooldown {
        get {
            if(_matcherAttackCooldown == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AttackCooldown);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAttackCooldown = matcher;
            }

            return _matcherAttackCooldown;
        }
    }
}
