//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public partial class GameContext {

    public GameEntity semoGamesPTGEnemyEnemySpawnCooldownEntity { get { return GetGroup(GameMatcher.SemoGamesPTGEnemyEnemySpawnCooldown).GetSingleEntity(); } }
    public SemoGames.PTG.Enemy.EnemySpawnCooldownComponent semoGamesPTGEnemyEnemySpawnCooldown { get { return semoGamesPTGEnemyEnemySpawnCooldownEntity.semoGamesPTGEnemyEnemySpawnCooldown; } }
    public bool hasSemoGamesPTGEnemyEnemySpawnCooldown { get { return semoGamesPTGEnemyEnemySpawnCooldownEntity != null; } }

    public GameEntity SetSemoGamesPTGEnemyEnemySpawnCooldown(float newCooldown) {
        if(hasSemoGamesPTGEnemyEnemySpawnCooldown) {
            throw new EntitasException("Could not set semoGamesPTGEnemyEnemySpawnCooldown!\n" + this + " already has an entity with SemoGamesPTGEnemyEnemySpawnCooldownComponent!",
                "You should check if the context already has a semoGamesPTGEnemyEnemySpawnCooldownEntity before setting it or use context.ReplaceSemoGamesPTGEnemyEnemySpawnCooldown().");
        }
        var entity = CreateEntity();
        entity.AddSemoGamesPTGEnemyEnemySpawnCooldown(newCooldown);
        return entity;
    }

    public void ReplaceSemoGamesPTGEnemyEnemySpawnCooldown(float newCooldown) {
        var entity = semoGamesPTGEnemyEnemySpawnCooldownEntity;
        if(entity == null) {
            entity = SetSemoGamesPTGEnemyEnemySpawnCooldown(newCooldown);
        } else {
            entity.ReplaceSemoGamesPTGEnemyEnemySpawnCooldown(newCooldown);
        }
    }

    public void RemoveSemoGamesPTGEnemyEnemySpawnCooldown() {
        DestroyEntity(semoGamesPTGEnemyEnemySpawnCooldownEntity);
    }
}
