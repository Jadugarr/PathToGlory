//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ReadyToChooseActionComponent readyToChooseAction { get { return (ReadyToChooseActionComponent)GetComponent(GameComponentsLookup.ReadyToChooseAction); } }
    public bool hasReadyToChooseAction { get { return HasComponent(GameComponentsLookup.ReadyToChooseAction); } }

    public void AddReadyToChooseAction(int newEntityReadyToActId) {
        var index = GameComponentsLookup.ReadyToChooseAction;
        var component = CreateComponent<ReadyToChooseActionComponent>(index);
        component.EntityReadyToActId = newEntityReadyToActId;
        AddComponent(index, component);
    }

    public void ReplaceReadyToChooseAction(int newEntityReadyToActId) {
        var index = GameComponentsLookup.ReadyToChooseAction;
        var component = CreateComponent<ReadyToChooseActionComponent>(index);
        component.EntityReadyToActId = newEntityReadyToActId;
        ReplaceComponent(index, component);
    }

    public void RemoveReadyToChooseAction() {
        RemoveComponent(GameComponentsLookup.ReadyToChooseAction);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherReadyToChooseAction;

    public static Entitas.IMatcher<GameEntity> ReadyToChooseAction {
        get {
            if (_matcherReadyToChooseAction == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ReadyToChooseAction);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherReadyToChooseAction = matcher;
            }

            return _matcherReadyToChooseAction;
        }
    }
}
