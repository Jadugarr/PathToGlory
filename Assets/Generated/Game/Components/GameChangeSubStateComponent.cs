//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity changeSubStateEntity { get { return GetGroup(GameMatcher.ChangeSubState).GetSingleEntity(); } }
    public ChangeSubStateComponent changeSubState { get { return changeSubStateEntity.changeSubState; } }
    public bool hasChangeSubState { get { return changeSubStateEntity != null; } }

    public GameEntity SetChangeSubState(SubState newNewSubState) {
        if (hasChangeSubState) {
            throw new Entitas.EntitasException("Could not set ChangeSubState!\n" + this + " already has an entity with ChangeSubStateComponent!",
                "You should check if the context already has a changeSubStateEntity before setting it or use context.ReplaceChangeSubState().");
        }
        var entity = CreateEntity();
        entity.AddChangeSubState(newNewSubState);
        return entity;
    }

    public void ReplaceChangeSubState(SubState newNewSubState) {
        var entity = changeSubStateEntity;
        if (entity == null) {
            entity = SetChangeSubState(newNewSubState);
        } else {
            entity.ReplaceChangeSubState(newNewSubState);
        }
    }

    public void RemoveChangeSubState() {
        changeSubStateEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ChangeSubStateComponent changeSubState { get { return (ChangeSubStateComponent)GetComponent(GameComponentsLookup.ChangeSubState); } }
    public bool hasChangeSubState { get { return HasComponent(GameComponentsLookup.ChangeSubState); } }

    public void AddChangeSubState(SubState newNewSubState) {
        var index = GameComponentsLookup.ChangeSubState;
        var component = (ChangeSubStateComponent)CreateComponent(index, typeof(ChangeSubStateComponent));
        component.NewSubState = newNewSubState;
        AddComponent(index, component);
    }

    public void ReplaceChangeSubState(SubState newNewSubState) {
        var index = GameComponentsLookup.ChangeSubState;
        var component = (ChangeSubStateComponent)CreateComponent(index, typeof(ChangeSubStateComponent));
        component.NewSubState = newNewSubState;
        ReplaceComponent(index, component);
    }

    public void RemoveChangeSubState() {
        RemoveComponent(GameComponentsLookup.ChangeSubState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherChangeSubState;

    public static Entitas.IMatcher<GameEntity> ChangeSubState {
        get {
            if (_matcherChangeSubState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ChangeSubState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherChangeSubState = matcher;
            }

            return _matcherChangeSubState;
        }
    }
}
