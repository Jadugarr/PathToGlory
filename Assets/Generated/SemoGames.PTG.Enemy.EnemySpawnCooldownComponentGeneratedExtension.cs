//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public SemoGames.PTG.Enemy.EnemySpawnCooldownComponent enemySpawnCooldown { get { return (SemoGames.PTG.Enemy.EnemySpawnCooldownComponent)GetComponent(CoreComponentIds.EnemySpawnCooldown); } }
        public bool hasEnemySpawnCooldown { get { return HasComponent(CoreComponentIds.EnemySpawnCooldown); } }

        public Entity AddEnemySpawnCooldown(float newCooldown) {
            var component = CreateComponent<SemoGames.PTG.Enemy.EnemySpawnCooldownComponent>(CoreComponentIds.EnemySpawnCooldown);
            component.cooldown = newCooldown;
            return AddComponent(CoreComponentIds.EnemySpawnCooldown, component);
        }

        public Entity ReplaceEnemySpawnCooldown(float newCooldown) {
            var component = CreateComponent<SemoGames.PTG.Enemy.EnemySpawnCooldownComponent>(CoreComponentIds.EnemySpawnCooldown);
            component.cooldown = newCooldown;
            ReplaceComponent(CoreComponentIds.EnemySpawnCooldown, component);
            return this;
        }

        public Entity RemoveEnemySpawnCooldown() {
            return RemoveComponent(CoreComponentIds.EnemySpawnCooldown);
        }
    }

    public partial class Context {

        public Entity enemySpawnCooldownEntity { get { return GetGroup(CoreMatcher.EnemySpawnCooldown).GetSingleEntity(); } }
        public SemoGames.PTG.Enemy.EnemySpawnCooldownComponent enemySpawnCooldown { get { return enemySpawnCooldownEntity.enemySpawnCooldown; } }
        public bool hasEnemySpawnCooldown { get { return enemySpawnCooldownEntity != null; } }

        public Entity SetEnemySpawnCooldown(float newCooldown) {
            if(hasEnemySpawnCooldown) {
                throw new EntitasException("Could not set enemySpawnCooldown!\n" + this + " already has an entity with SemoGames.PTG.Enemy.EnemySpawnCooldownComponent!",
                    "You should check if the context already has a enemySpawnCooldownEntity before setting it or use context.ReplaceEnemySpawnCooldown().");
            }
            var entity = CreateEntity();
            entity.AddEnemySpawnCooldown(newCooldown);
            return entity;
        }

        public Entity ReplaceEnemySpawnCooldown(float newCooldown) {
            var entity = enemySpawnCooldownEntity;
            if(entity == null) {
                entity = SetEnemySpawnCooldown(newCooldown);
            } else {
                entity.ReplaceEnemySpawnCooldown(newCooldown);
            }

            return entity;
        }

        public void RemoveEnemySpawnCooldown() {
            DestroyEntity(enemySpawnCooldownEntity);
        }
    }
}

    public partial class CoreMatcher {

        static IMatcher _matcherEnemySpawnCooldown;

        public static IMatcher EnemySpawnCooldown {
            get {
                if(_matcherEnemySpawnCooldown == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.EnemySpawnCooldown);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherEnemySpawnCooldown = matcher;
                }

                return _matcherEnemySpawnCooldown;
            }
        }
    }
